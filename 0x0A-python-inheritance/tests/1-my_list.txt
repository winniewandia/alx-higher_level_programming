This library contains the ``my_list`` class
that inherits the list class

The module:
    >>> MyList = __import__('1-my_list').MyList

Printing positive numbers
    >>> my_list = MyList()
    >>> my_list += [1]
    >>> my_list.append(0)
    >>> my_list.append(5)
    >>> my_list.append(4)
    >>> my_list.append(7)
    >>> my_list.print_sorted()
    [0, 1, 4, 5, 7]
    >>> my_list
    [1, 0, 5, 4, 7]

Printing repeated numbers
    >>> my_list = MyList()
    >>> my_list += [1]
    >>> my_list.append(1)
    >>> my_list.append(5)
    >>> my_list.append(5)
    >>> my_list.append(5)
    >>> my_list.print_sorted()
    [1, 1, 5, 5, 5]

Printing positive and negative numbers
    >>> my_list = MyList()
    >>> my_list += [-1]
    >>> my_list.append(2)
    >>> my_list.append(0)
    >>> my_list.append(-5)
    >>> my_list.append(20)
    >>> my_list.print_sorted()
    [-5, -1, 0, 2, 20]

Printing one number
    >>> my_list = MyList()
    >>> my_list += [1]
    >>> my_list.print_sorted()
    [1]

Printing empty list
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

Instance of class list
    >>> my_list = MyList()
    >>> isinstance(my_list, list)
    True

Correct type
    >>> my_list = MyList()
    >>> type(my_list) == MyList
    True

is a subclass
    >>> issubclass(MyList, list)
    True

Type of print_sorted methods
    >>> my_list = MyList()
    >>> type(my_list.print_sorted)
    <class 'method'>

Print_sorted method with 1 passed argument
    >>> my_list = MyList()
    >>> my_list.print_sorted([6, 27, 33])
    Traceback (most recent call last):
    	      ...
    TypeError: MyList.print_sorted() takes 1 positional argument but 2 were given
